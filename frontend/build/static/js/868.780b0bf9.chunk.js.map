{"version":3,"file":"static/js/868.780b0bf9.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","components/CalendarView/index.js","features/calendar/index.js","pages/protected/Calendar.js"],"sourcesContent":["import { useState } from 'react';\nimport { Button, Alert } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Subtitle from \"../Typography/Subtitle\";\n\nfunction TitleCard({ title, children, topMargin, EyeIcon, TopSideButtons, isVisible, onEyeChange }) {\n  const generateUniqueString = () => {\n    return Math.random().toString(36).substr(2, 40);\n  };\n\n  const NewPageCreate = async () => {\n    const uniqueString = generateUniqueString();\n    console.log(\"Creating new component with unique string:\", uniqueString);\n    try {\n      const response = await axios.post('/create-component', { uniqueString });\n      if (response.data.success) {\n        return <Alert message=\"Component created successfully!\" type=\"success\" showIcon />;\n      } else {\n        return <Alert message=\"Failed to create component\" type=\"error\" showIcon />;\n      }\n    } catch (error) {\n      console.error('Error creating component', error);\n    }\n  };\n  return (\n    <div className={\"card w-full p-3 md:p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-4\")}>\n      <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n        {title}\n        {TopSideButtons && <Button type='primary' className=\"inline-block float-right\" onClick={NewPageCreate}>{TopSideButtons}</Button>}\n        {EyeIcon && <button className=\"float-right pr-5\" onClick={onEyeChange}>\n          {isVisible ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n        </button>}\n      </Subtitle>\n\n      <div className=\"divider mt-2\"></div>\n\n      {(isVisible || EyeIcon) && \n        <div className='h-full w-full pb-4 bg-base-100'>\n          {children}\n        </div>\n      }\n\n    </div>\n  );\n}\n\nexport default TitleCard;\n"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import { useEffect, useState } from \"react\";\n// import ChevronLeftIcon from \"@heroicons/react/24/solid/ChevronLeftIcon\";\n// import ChevronRightIcon from \"@heroicons/react/24/solid/ChevronRightIcon\";\nimport moment from \"moment\";\nimport { DatePicker, Select, Popover, Badge } from 'antd'\nimport { CalendarOutlined, EditOutlined, DeleteOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport dayjs from \"dayjs\";\nconst { Option } = Select;\n\nconst color = ['blue', 'red', 'green', 'pink', 'violet', 'yellow']\nconst Hours = ['0 AM', '1 AM', '2 AM', '3 AM', '4 AM', '5 AM', '6 AM', '7 AM', '8 AM', '9 AM', '10 AM', '11 AM', '12 AM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', '7 PM', '8 PM', '9 PM', '10 PM', '11 PM']\n\nconst EventDetail = ({ item, editEvent, deleteEvent }) => {\n  const [open, setOpen] = useState(false);\n\n  const hide = () => {\n    setOpen(false);\n  };\n\n  const handleOpenChange = (newOpen) => {\n    setOpen(newOpen);\n  };\n\n  return (\n    <Popover\n      trigger={\"click\"}\n      open={open}\n      onOpenChange={handleOpenChange}\n      content={\n        <div className=\"w-80\">\n          <div className=\"text-right\">\n            <div className=\"inline-block mx-1\">\n              <EditOutlined className=\"cursor-pointer\" onClick={() => {\n                editEvent(item)\n                hide()\n              }} />\n            </div>\n            <div className=\"inline-block mx-1\">\n              <DeleteOutlined className=\"cursor-pointer\" onClick={() => {\n                deleteEvent(item._id)\n                hide()\n              }} />\n            </div>\n            <div className=\"inline-block mx-1\">\n              <CloseOutlined className=\"cursor-pointer\" onClick={hide} />\n            </div>\n          </div>\n          <div className=\"font-bold mb-2 break-all\"><Badge color={color[item.type]} text={item.title} /></div>\n          <p className=\"text-xs my-2 break-all ml-4\">{moment(item.startTime).format(\"YYYY-MM-DD HH:mm\")}</p>\n          <p className=\"my-2 break-all\"><CalendarOutlined className=\"mr-2\" />{item.note}</p>\n        </div>\n      }\n    >\n      <div className=\"py-0.5\">\n        <div className={`bg-${color[item.type]}-500 text-white px-2 py-0.5 rounded text-xs whitespace-nowrap overflow-hidden text-ellipsis cursor-pointer`}>\n          <p className='font-bold'>{item.title}</p>\n        </div>\n      </div>\n    </Popover>\n  )\n}\n\nfunction CalendarView({ calendarEvents, addEvent, editEvent, deleteEvent/*, openDayDetail*/ }) {\n  const today = moment().startOf('day')\n  const weekdays = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\n  const [events, setEvents] = useState([])\n  const [currDate, setCurrDate] = useState(moment(today))\n\n  useEffect(() => {\n    setEvents(calendarEvents)\n  }, [calendarEvents])\n\n  const allDaysInMonth = () => {\n    let start = moment(currDate).startOf('month').startOf('week')\n    let end = moment(currDate).endOf('month').endOf('week')\n    var days = [];\n    var day = start;\n    while (day <= end) {\n      days.push(day.toDate());\n      day = day.clone().add(1, 'd');\n    }\n    return days\n  }\n\n  const allDaysInWeek = () => {\n    let start = moment(currDate).startOf('week')\n    let end = moment(currDate).endOf('week')\n    var days = []\n    var day = start\n    while (day <= end) {\n      days.push(day.toDate())\n      day = day.clone().add(1, 'd')\n    }\n    return days\n  }\n\n  const getEventsForCurrentDate = (date) => {\n    let filteredEvents = events.filter((e) => { return moment(date).isSame(moment(e.startTime), 'day') })\n    return filteredEvents\n  }\n\n  const getEventsForCurrentDateTime = (datetime) => {\n    let filteredEvents = events.filter((e) => { return moment(datetime).isSame(moment(e.startTime), 'day') && moment(datetime).isSame(moment(e.startTime), 'hour') })\n    return filteredEvents\n  }\n\n  // const openAllEventsDetail = (date, theme) => {\n  //   if (theme != \"MORE\") return 1\n  //   let filteredEvents = events.filter((e) => { return moment(date).isSame(moment(e.startTime), 'day') }).map((e) => { return { title: e.title, theme: e.theme } })\n  //   openDayDetail({ filteredEvents, title: moment(date).format(\"D MMM YYYY\") })\n  // }\n\n  const isToday = (date) => {\n    return moment(date).isSame(moment(), 'day');\n  }\n\n  const isDifferentMonth = (date) => {\n    return moment(date).month() != moment(currDate).month()\n  }\n\n  // const getPrevMonth = () => {\n  //   const firstDayOfPrevMonth = moment(currDate).add(-1, 'M').startOf('month');\n  //   setCurrDate(firstDayOfPrevMonth);\n  // };\n\n  // const getCurrentMonth = () => {\n  //   const firstDayOfCurrMonth = moment().startOf('month');\n  //   setCurrDate(firstDayOfCurrMonth);\n  // };\n\n  // const getNextMonth = () => {\n  //   const firstDayOfNextMonth = moment(currDate).add(1, 'M').startOf('month');\n  //   setCurrDate(firstDayOfNextMonth);\n  // };\n\n  const [type, setType] = useState('month')\n\n  return (\n    <>\n      <div className=\"w-full bg-base-100 rounded-lg\">\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <Select value={type} onChange={setType}>\n            <Option value=\"week\">Week</Option>\n            <Option value=\"month\">Month</Option>\n          </Select>\n          <DatePicker picker={type} value={dayjs(currDate)} onChange={(date) => { setCurrDate(date.format()) }} allowClear={false} />\n        </div>\n        {/* <div className=\"flex items-center justify-between my-2\">\n          <div className=\"flex flex-wrap justify-normal gap-2\">\n            <p className=\"font-semibold text-xl\">\n              {moment(currDate).format(\"MMMM yyyy\").toString()}\n            </p>\n            <div className=\"flex\">\n              <button className=\"btn btn-square btn-sm btn-ghost\" onClick={getPrevMonth}>\n                <ChevronLeftIcon className=\"w-4 h-4\" />\n              </button>\n              <button className=\"btn btn-sm btn-ghost px-2\" onClick={getCurrentMonth}>\n                Current Month</button>\n              <button className=\"btn btn-square btn-sm btn-ghost\" onClick={getNextMonth}>\n                <ChevronRightIcon className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n        </div> */}\n        {/* <div className=\"divider my-0\" /> */}\n        <div className=\"ml-12 grid grid-cols-7 place-items-center my-2\">\n          {weekdays.map((day, key) => {\n            return (\n              <div className=\"text-xs capitalize\" key={key}>\n                {day}\n              </div>\n            );\n          })}\n        </div>\n        {\n          type == 'month' ? (\n            <div className=\"grid grid-cols-7 mt-1 place-items-stretch\">\n              {\n                allDaysInMonth().map((day, i) => {\n                  return (\n                    <div key={i} className={`flex flex-col border border-solid border-base-300 w-full h-32 ${isToday(day) && \"bg-blue-100 dark:bg-base-200 dark:text-white\"} ${isDifferentMonth(day) && \"text-slate-400 dark:text-slate-600\"}`}>\n                      <div className=\"text-center py-0.5\">{moment(day).format(\"D\")}</div>\n                      <div className=\"px-0.5 overflow-y-scroll\">\n                        {\n                          getEventsForCurrentDate(day).map((item, k) => <EventDetail key={k} item={item} editEvent={editEvent} deleteEvent={deleteEvent} />)\n                        }\n                      </div>\n                      <div className=\"py-0.5 grow text-xs flex justify-center items-end text-[#8884] cursor-pointer\" onClick={() => addEvent(day)} >+</div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n          ) : (\n            <div className=\"flex flex-wrap\">\n              <div className=\"w-full grid grid-cols-7 ml-10\">\n                {\n                  allDaysInWeek().map((day, j) => <div key={j} className=\"text-center\">{moment(day).format(\"D\")}</div>)\n                }\n              </div>\n              <div className=\"w-full\">\n                {\n                  Hours.map((hour, i) => {\n                    return (\n                      <div key={i} className=\"flex h-16 border-t last:border-b border-dotted border-base-300\">\n                        <div className=\"w-10 flex-none\">\n                          <p className=\"text-xs\">{hour}</p>\n                        </div>\n                        <div className=\"w-full grid grid-cols-7\">\n                          {\n                            allDaysInWeek().map((day, j) => {\n                              const datetime = moment(day).clone().add(i, 'h')\n                              return (\n                                <div key={j} className=\"border-l last:border-r border-base-300 flex flex-col h-16\">\n                                  <div className=\"px-0.5 overflow-y-scroll\">\n                                    {\n                                      getEventsForCurrentDateTime(datetime).map((item, k) => <EventDetail key={k} item={item} editEvent={editEvent} deleteEvent={deleteEvent} />)\n                                    }\n                                  </div>\n                                  <div className=\"pb-0.5 grow text-xs flex justify-center items-end text-[#8884] cursor-pointer\" onClick={() => addEvent(datetime)} >+</div>\n                                </div>\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div >\n    </>\n  )\n}\n\nexport default CalendarView","import { useDispatch, useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nimport { Modal, Input, DatePicker, Select } from 'antd'\n\nimport dayjs from 'dayjs'\n\nimport TitleCard from \"../../components/Cards/TitleCard\"\nimport CalendarView from '../../components/CalendarView'\nimport { setScheduleList } from '../common/headerSlice'\nimport { showNotification } from '../common/headerSlice'\n\nimport query from '../../utils/query'\n\nconst scheduleTypes = [\n    { value: 0, label: 'other' },\n    { value: 1, label: 'clinic_time' },\n    { value: 2, label: 'operation_time' },\n    { value: 3, label: 'consultation' },\n    { value: 4, label: 'meeting' },\n    { value: 5, label: 'birthday' },\n]\n\nconst notifyOptions = [\n    { value: 0, label: 'none' },\n    { value: 300, label: '5min' },\n    { value: 900, label: '15min' },\n    { value: 1800, label: '30min' },\n    { value: 3600, label: '1h' },\n    { value: 10800, label: '3h' },\n    { value: 21600, label: '6h' },\n    { value: 43200, label: '12h' },\n    { value: 86400, label: '1day' },\n]\n\nfunction Calendar() {\n    const { t } = useTranslation()\n    const [modal, contextHolder] = Modal.useModal();\n\n    const dispatch = useDispatch()\n\n    const { scheduleList } = useSelector(state => state.header)\n\n    // Add your own Add Event handler, like opening modal or random event addition\n\n    const addEvent = (day) => {\n        let startTime = day\n        let type = 0\n        let notifyBefore = 0\n        let title = ''\n        let note = ''\n\n        modal.confirm({\n            title: t('new_schedule'),\n            okType: 'default',\n            okText: t('ok'),\n            cancelText: t('cancel'),\n            mask: false,\n            content:\n                <div>\n                    <p className='my-2'>{t('type')}:</p>\n                    <Select\n                        className='w-full'\n                        defaultValue={type}\n                        options={scheduleTypes.map(type => ({ value: type.value, label: t(type.label) }))}\n                        onChange={v => type = v}\n                    />\n                    <p className='my-2'>{t('notifySetting')}:</p>\n                    <Select\n                        className='w-full'\n                        defaultValue={notifyBefore}\n                        options={notifyOptions.map(notify => ({ value: notify.value, label: t(notify.label) }))}\n                        onChange={v => notifyBefore = v}\n                    />\n                    <p className='my-2'>{t('datetime')}:</p>\n                    <DatePicker\n                        className='w-full'\n                        showTime\n                        defaultValue={dayjs(startTime)}\n                        format={'MM/DD/YYYY HH:mm'}\n                        onChange={(e) => startTime = e}\n                        allowClear={false}\n                    />\n                    <p className='my-2'>{t('title')}:</p>\n                    <Input onChange={(e) => title = e.target.value} />\n                    <p className='my-2'>{t('note')}:</p>\n                    <Input.TextArea maxLength={1000} className='max-h-48' onChange={e => note = e.target.value} />\n                </div>,\n            onOk: (cb) => {\n                if (title.trim().length == 0 || note.trim().length == 0) {\n                    dispatch(showNotification({ message: t('please_input_schedule_info'), status: 0 }))\n                    return\n                }\n                query.post('/schedule', { type, startTime, title, note, notifyBefore }, (data) => {\n                    dispatch(setScheduleList([...scheduleList, data.result]))\n                    cb()\n                })\n            },\n        })\n    }\n\n    const deleteEvent = (_id) => {\n        query.delete(`/schedule/${_id}`, () => {\n            dispatch(setScheduleList(scheduleList.filter(event => event._id != _id)))\n        })\n    }\n\n    const editEvent = (schedule) => {\n        let { _id, startTime, type, title, note, notifyBefore } = schedule\n\n        modal.confirm({\n            title: t('edit_schedule'),\n            okType: 'default',\n            okText: t('ok'),\n            cancelText: t('cancel'),\n            mask: false,\n            content:\n                <div>\n                    <p className='my-2'>{t('type')}:</p>\n                    <Select\n                        className='w-full'\n                        defaultValue={type}\n                        options={scheduleTypes.map(type => ({ value: type.value, label: t(type.label) }))}\n                        onChange={v => type = v}\n                    />\n                    <p className='my-2'>{t('notifySetting')}:</p>\n                    <Select\n                        className='w-full'\n                        defaultValue={notifyBefore}\n                        options={notifyOptions.map(notify => ({ value: notify.value, label: t(notify.label) }))}\n                        onChange={v => notifyBefore = v}\n                    />\n                    <p className='my-2'>{t('datetime')}:</p>\n                    <DatePicker\n                        className='w-full'\n                        showTime\n                        defaultValue={dayjs(startTime)}\n                        format={'MM/DD/YYYY HH:mm'}\n                        onChange={(e) => startTime = e}\n                        allowClear={false}\n                    />\n                    <p className='my-2'>{t('title')}:</p>\n                    <Input defaultValue={title} onChange={(e) => title = e.target.value} />\n                    <p className='my-2'>{t('note')}:</p>\n                    <Input.TextArea defaultValue={note} maxLength={1000} className='max-h-48' onChange={e => note = e.target.value} />\n                </div>,\n            onOk: (cb) => {\n                if (title.trim().length == 0 || note.trim().length == 0) {\n                    dispatch(showNotification({ message: t('please_input_schedule_info'), status: 0 }))\n                    return\n                }\n                query.put(`/schedule/${_id}`, { type, startTime, title, note, notifyBefore }, (data) => {\n                    dispatch(setScheduleList(scheduleList.map(event => {\n                        if (event._id == _id)\n                            return data.result\n                        return event;\n                    })))\n                    cb()\n                })\n            },\n        })\n    }\n\n    return (\n        <>\n            {contextHolder}\n            <TitleCard title={t('calendar')}>\n                <CalendarView\n                    calendarEvents={scheduleList}\n                    addEvent={addEvent}\n                    editEvent={editEvent}\n                    deleteEvent={deleteEvent}\n                />\n            </TitleCard>\n        </>\n    )\n}\n\nexport default Calendar","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Calendar from '../../features/calendar'\n\nfunction InternalPage() {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title: 'calendar' }))\n    }, [])\n\n    return (\n        <Calendar />\n    )\n}\n\nexport default InternalPage"],"names":["_ref","title","children","topMargin","EyeIcon","TopSideButtons","isVisible","onEyeChange","_jsxs","className","Subtitle","styleClass","_jsx","Button","type","onClick","async","uniqueString","Math","random","toString","substr","console","log","axios","post","data","success","Alert","message","showIcon","error","EyeOutlined","EyeInvisibleOutlined","concat","Option","Select","color","Hours","EventDetail","item","editEvent","deleteEvent","open","setOpen","useState","hide","Popover","trigger","onOpenChange","newOpen","content","EditOutlined","DeleteOutlined","_id","CloseOutlined","Badge","text","moment","startTime","format","CalendarOutlined","note","_ref2","calendarEvents","addEvent","today","startOf","events","setEvents","currDate","setCurrDate","useEffect","allDaysInWeek","start","end","endOf","days","day","push","toDate","clone","add","getEventsForCurrentDate","date","filter","e","isSame","getEventsForCurrentDateTime","datetime","isDifferentMonth","month","setType","_Fragment","value","onChange","DatePicker","picker","dayjs","allowClear","map","key","allDaysInMonth","i","k","j","hour","scheduleTypes","label","notifyOptions","t","useTranslation","modal","contextHolder","Modal","useModal","dispatch","useDispatch","scheduleList","useSelector","state","header","TitleCard","CalendarView","notifyBefore","confirm","okType","okText","cancelText","mask","defaultValue","options","v","notify","showTime","Input","target","TextArea","maxLength","onOk","cb","trim","length","query","setScheduleList","result","showNotification","status","schedule","put","event","delete","setPageTitle","Calendar"],"sourceRoot":""}
{"version":3,"file":"static/js/821.ccab847c.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Input/InputText.js","components/Typography/ErrorText.js","components/Typography/Subtitle.js","features/documentation/components/FeaturesNav.js","features/documentation/components/GettingStartedContent.js","features/documentation/components/GettingStartedNav.js","components/Typography/Title.js","features/documentation/components/DocComponentsNav.js","features/documentation/components/FeaturesContent.js","components/Typography/HelperText.js","features/documentation/components/DocComponentsContent.js","pages/Documentation.js"],"sourcesContent":["import { useState } from 'react';\nimport { Button, Alert } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport Subtitle from \"../Typography/Subtitle\";\n\nfunction TitleCard({ title, children, topMargin, EyeIcon, TopSideButtons, isVisible, onEyeChange }) {\n  const generateUniqueString = () => {\n    return Math.random().toString(36).substr(2, 40);\n  };\n\n  const NewPageCreate = async () => {\n    const uniqueString = generateUniqueString();\n    console.log(\"Creating new component with unique string:\", uniqueString);\n    try {\n      const response = await axios.post('/create-component', { uniqueString });\n      if (response.data.success) {\n        return <Alert message=\"Component created successfully!\" type=\"success\" showIcon />;\n      } else {\n        return <Alert message=\"Failed to create component\" type=\"error\" showIcon />;\n      }\n    } catch (error) {\n      console.error('Error creating component', error);\n    }\n  };\n  return (\n    <div className={\"card w-full p-3 md:p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-4\")}>\n      <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n        {title}\n        {TopSideButtons && <Button type='primary' className=\"inline-block float-right\" onClick={NewPageCreate}>{TopSideButtons}</Button>}\n        {EyeIcon && <button className=\"float-right pr-5\" onClick={onEyeChange}>\n          {isVisible ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n        </button>}\n      </Subtitle>\n\n      <div className=\"divider mt-2\"></div>\n\n      {(isVisible || EyeIcon) && \n        <div className='h-full w-full pb-4 bg-base-100'>\n          {children}\n        </div>\n      }\n\n    </div>\n  );\n}\n\nexport default TitleCard;\n","import { useState } from \"react\"\n\n\nfunction InputText({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\n\n    const [value, setValue] = useState(defaultValue)\n\n    const updateInputValue = (val) => {\n        setValue(val)\n        updateFormValue({updateType, value : val})\n    }\n\n    return(\n        <div className={`form-control w-full ${containerStyle}`}>\n            <label className=\"label\">\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\n            </label>\n            <input type={type || \"text\"} value={value} placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}className=\"input  input-bordered w-full \" />\n        </div>\n    )\n}\n\n\nexport default InputText","function ErrorText({styleClass, children}){\n    return(\n        <p className={`text-center  text-error ${styleClass}`}>{children}</p>\n    )\n}\n\nexport default ErrorText"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import { useState } from \"react\"\n\nfunction FeaturesNav({activeIndex}){\n\n    const SECTION_NAVS = [\n        {name : \"Authentication\", isActive : activeIndex === 1 ? true : false},\n        {name : \"Sidebar\", isActive : false},\n        {name : \"Add New Page\", isActive : false},\n        {name : \"Right sidebar\", isActive : false},\n        {name : \"Themes\", isActive : false},\n        {name : \"Modal\", isActive : false},\n        {name : \"Notification\", isActive : false},\n    ]\n    const [navs, setNavs] = useState(SECTION_NAVS)\n\n    const scrollToSection = (currentIndex) => {\n        setNavs(navs.map((n, k) => {\n            if(k === currentIndex)return {...n, isActive : true}\n            else return {...n, isActive : false}\n        }))\n        document.getElementById('feature'+(currentIndex+1)).scrollIntoView({behavior: 'smooth' })\n    }\n\n    return(\n        <ul className=\"menu w-56 mt-10 text-sm\">\n            <li className=\"menu-title\"><span className=\"\">Features</span></li>\n            \n            {\n                navs.map((n, k) => {\n                    return(\n                        <li key={k} onClick={() => scrollToSection(k)} className={n.isActive ? \"bordered\" : \"\"}><a>{n.name}</a></li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nexport default FeaturesNav","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Subtitle from '../../../components/Typography/Subtitle'\nimport { setPageTitle } from '../../common/headerSlice'\n\nfunction GettingStartedContent(){\n\n    const dispatch = useDispatch()\n\n\n\n    return(\n        <>\n            <article className=\"prose\">\n              <h1 className=\"\">Getting Started</h1>\n\n\n              {/* Introduction */}\n              <h2 className=\"\" id=\"getstarted1\">Introduction</h2>\n              <p>A free dashboard template using <span className='font-bold'>Daisy UI</span> and react js. With the help of Dasisy UI, it comes with <span className='font-bold'>fully customizable and themable CSS</span> and power of Tailwind CSS utility classes. We have also added <span className='font-bold'>redux toolkit</span>  and configured it for API calls and state management.</p> \n              <p>User authentication has been implemented using JWT token method (ofcourse you need backend API for generating and verifying token). This template can be used to start your next SaaS project or build new internal tools in your company.</p>\n              <h4> Core libraries used - </h4>\n              <ul>\n                  <li><a href=\"https://reactjs.org/\" target=\"_blank\">React JS v18.2.0</a></li>\n                  <li><a href=\"https://reactrouter.com/en/main\" target=\"_blank\">React Router v6.4.3</a></li>\n                  <li><a href=\"https://tailwindcss.com/\" target=\"_blank\">Tailwind CSS v3.3.6</a></li>\n                  <li><a href=\"https://daisyui.com/\" target=\"_blank\">Daisy UI v4.4.19</a></li>\n                  <li><a href=\"https://heroicons.com/\" target=\"_blank\">HeroIcons v2.0.13</a></li>\n                  <li><a href=\"https://redux-toolkit.js.org/\" target=\"_blank\">Redux toolkit v1.9.0</a></li>\n                  <li><a href=\"https://react-chartjs-2.js.org/\" target=\"_blank\">React ChartJS 2 v5.0.1</a></li>\n              </ul>\n              <h4>Major features - </h4>\n              <p className=''>Almost all major UI components are available in Daisy UI library. Apart from this logic has been added for following - </p>\n              <ul>\n                  <li> <span className='font-bold'>Light/dark</span> mode toggle</li>\n                  <li> Token based user authentication</li>\n                  <li> <span className='font-bold'>Submenu support</span> in sidebar</li>\n                  <li> Store management using <span className='font-bold'>redux toolkit</span></li>\n                  <li> <span className='font-bold'>Daisy UI</span> components</li>\n                  <li> <span className='font-bold'>Right and left sidebar</span>, Universal loader, notifications and other components</li>\n                  <li> React <span className='font-bold'>chart js 2</span> examples</li>\n              </ul>\n              \n\n\n\n\n              {/* How to Use */}\n              <h2 id=\"getstarted2\">How to use?</h2>\n                <p>\n                    Just clone the repo from github and then run following command (Make sure you have node js installed )<br/>\n                    <a href=\"https://github.com/srobbin01/daisyui-admin-dashboard-template\" className='text-sm text-blue-500' target=\"_blank\">Repo Link</a>\n                    <br />\n                    <code> npm install </code><br />\n                    <code>npm start</code>\n                </p>\n\n\n              {/* Tailwind CSS*/}\n              <h2 id=\"getstarted3\">Tailwind CSS</h2>\n                <p>\n                Tailwind CSS is a utility-first CSS framework with predefined classes that you can use to build and design the UI directly in the JSX. We have also included Daisy UI Component, that is based on tailwind CSS.\n                </p>\n\n              {/* Daisy UI */}\n              <h2 id=\"getstarted4\">Daisy UI</h2>\n\n              <p><a href=\"https://daisyui.com/\" target=\"_blank\" className='text-xl btn-link'>Daisy UI</a>, a popular free and opensource tailwind component library has been used for this template. It has a rich collection of components, layouts and is fully customizable and themeable.</p>\n              \n              <p>Apart from this it also helps in making HTML code more cleaner as we don't have to include all utility classes of tailwind to make the UI. Check components <a href=\"https://daisyui.com/components/button/\" target=\"_blank\" className='btn-link'>documentation here</a>. For Ex- </p>\n\n              <div className='text-center'>\n                <h2 className='text-xl font-bold mb-0.5'>Creating a button</h2>\n              </div>\n              <div className=\"\">\n\n                  <div className='text-center'>\n                        <p className='text-center font-semibold'> using only utility classes of tailwind</p>\n                        <div className=\"mockup-code text-justify mb-4\">\n                          <pre className='my-0 py-0'><code>{'<a className=\"inline-block px-4 py-3 \\n text-sm font-semibold text-center \\n text-white uppercase transition duration-200 \\n ease-in-out bg-indigo-600 \\n rounded-md cursor-pointer \\n hover:bg-indigo-700\">Button</a>'}</code></pre>\n                        </div> \n                        <button className=\"inline-block  px-4 py-3  text-sm font-semibold text-center  text-white uppercase transition duration-200  ease-in-out bg-indigo-600  rounded-md cursor-pointer  hover:bg-indigo-700\">Button</button>\n                  </div>\n\n                  <div className=\"divider\"></div> \n\n                  <div className='grid w-full flex-grow'>\n                      <p className='text-center font-semibold'>using daisyUI component classes</p>\n                        <div className=\"mockup-code mb-4\">\n                          <pre className='my-0 py-0'><code>{'<a className=\"btn btn-primary\">\\nButton</a>'}</code></pre>\n                        </div> \n                        <button className=\"btn btn-primary\">Button</button>\n                  </div>\n                </div>\n\n\n\n                   {/* Chart JS */}\n              <h2 id=\"getstarted5\">Chart JS</h2>\n                 <p>\n                 Chart JS library has rich components of different charts available. It is based on  <a href=\"https://www.chartjs.org/\" target=\"_blank\" alt=\"\"> Chart.js</a> library, the most popular charting library. We have added this library and added couple of examples in seperate page.\n                 </p>\n\n\n\n                  {/* Redux Toolkit */}\n              <h2 id=\"getstarted6\">Redux Toolkit</h2>\n                 <p>\n                 The Redux Toolkit package helps in writing redux logic easily. It was originally created to help address three common concerns about Redux:\n                    <li>Configuring a Redux store is too complicated</li>\n                    <li>I have to add a lot of packages to get Redux to do anything useful</li>\n                    <li>Redux requires too much boilerplate code\"</li>\n                    This library has been configured and used for showing notifications, modals and loading data from API in leads page.\n                 </p>\n\n\n                  {/* Hero Icons */}\n              <h2 id=\"getstarted7\">Hero Icons</h2>\n                <p><a href=\"https://heroicons.com/\" target=\"_blank\" className='text-xl btn-link'>HeroIcons</a> library has been used for all the icons in this templates. It has a rich collection of SVG icons, and is made by the makers of Tailwind CSS.</p>\n\n                <p className='mt-4'>Each icon can be imported individually as a React component, check <a href=\"https://github.com/tailwindlabs/heroicons\" target=\"_blank\" className='btn-link'>documentation</a></p>\n\n                <pre><code>{\"import BeakerIcon from '@heroicons/react/24/solid/BeakerIcon'\"}</code></pre>\n                <p>Use as follows in your component</p>\n                <pre><code>{\"<BeakerIcon className='h-6 w-6'/>\"}</code></pre>\n\n                <div className=\"divider \"></div>\n\n                <div className=\"alert mt-4 alert-warning shadow-lg\">\n                    <div><span>Note: Importing all icons in single line will increase your build time</span></div>\n                </div>\n\n                <p>Don't import like this (will load all icons and increase build time)</p>\n                <pre><code>{\"import {BeakerIcon, BellIcon } from '@heroicons/react/24/solid'\"}</code></pre>\n\n                <p>Instead import as follows</p>\n                <pre><code>{\"import BeakerIcon from '@heroicons/react/24/solid/BeakerIcon'\"}<br />\n                {\"import BellIcon from '@heroicons/react/24/solid/BellIcon'\"}</code></pre>\n\n                <div className=\"badge badge-secondary\">This is better way for importing icons</div>\n\n\n\n                 {/* Project Structure */}\n              <h2 id=\"getstarted8\">Project Structure</h2>\n              <h4>Folders - </h4>\n              <ul className='mt-0'>\n                  <li>app - store management, auth and libraries settings are present</li>\n                  <li>components - this include all common components to be used in project</li>\n                  <li>containers - components related to layout like sidebar, page layout, header etc..</li>\n                  <li>features - main folder where all page logic resides, there will be folder for each page and additional folder inside that to group different functionalities like components, modals etc... Redux slice file will also present inside page specific folder.</li>\n                  <li>pages - this contain one single file related to one page, if you want to divide page into different components file, use features folder and create seperate folder related to that page</li>\n                  <li>routes - all settings related to routes</li>\n                </ul>\n\n              <h4>Files - </h4>\n              <ul className='mt-0'>\n                    <li>App.js - Main file containing different routes and components </li>\n                    <li>index.css - Additional global css if required</li>\n                    <li>index.js - Entry point of project</li>\n                    <li>package.json - All dependencies and npm scripts</li>\n                    <li>tailwind.config.js - Tailwind CSS configuration file, add theme customization and new themes in this file</li>\n                </ul>\n\n\n                <div className='h-24'></div>\n\n            </article>\n        </>\n    )\n}\n\nexport default GettingStartedContent","import { useState } from \"react\"\n\nfunction GettingStartedNav({activeIndex}){\n\n    const SECTION_NAVS = [\n        {name : \"Introduction\", isActive : activeIndex === 1 ? true : false},\n        {name : \"How to Use\", isActive : false},\n        {name : \"Tailwind CSS\", isActive : false},\n        {name : \"Daisy UI\", isActive : false},\n        {name : \"Chart JS\", isActive : false},\n        {name : \"Redux Toolkit\", isActive : false},\n        {name : \"Hero Icons\", isActive : false},\n        {name : \"Project Structure\", isActive : false},\n    ]\n    const [navs, setNavs] = useState(SECTION_NAVS)\n\n    const scrollToSection = (currentIndex) => {\n        setNavs(navs.map((n, k) => {\n            if(k === currentIndex)return {...n, isActive : true}\n            else return {...n, isActive : false}\n        }))\n        document.getElementById('getstarted'+(currentIndex+1)).scrollIntoView({behavior: 'smooth' })\n    }\n\n    return(\n        <ul className=\"menu w-56 mt-10 text-sm\">\n            <li className=\"menu-title\"><span className=\"\">Getting Started</span></li>\n            \n            {\n                navs.map((n, k) => {\n                    return(\n                        <li key={k} onClick={() => scrollToSection(k)} className={n.isActive ? \"bordered\" : \"\"}><a>{n.name}</a></li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nexport default GettingStartedNav","function Title({className, children}){\n    return(\n        <p className={`text-2xl font-bold  ${className}`}>{children}</p>\n    )\n}\n\nexport default Title","import { useState } from \"react\"\n\nfunction DocComponentsNav({activeIndex}){\n\n    const SECTION_NAVS = [\n        {name : \"Typography\", isActive : activeIndex === 1 ? true : false},\n        {name : \"Form Input\", isActive : false},\n        {name : \"Cards\", isActive : false},\n    ]\n    const [navs, setNavs] = useState(SECTION_NAVS)\n\n    const scrollToSection = (currentIndex) => {\n        setNavs(navs.map((n, k) => {\n            if(k === currentIndex)return {...n, isActive : true}\n            else return {...n, isActive : false}\n        }))\n        document.getElementById('component'+(currentIndex+1)).scrollIntoView({behavior: 'smooth' })\n    }\n\n    return(\n        <ul className=\"menu w-56 mt-10 text-sm\">\n            <li className=\"menu-title\"><span className=\"\">Components</span></li>\n            \n            {\n                navs.map((n, k) => {\n                    return(\n                        <li key={k} onClick={() => scrollToSection(k)} className={n.isActive ? \"bordered\" : \"\"}><a>{n.name}</a></li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nexport default DocComponentsNav","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Subtitle from '../../../components/Typography/Subtitle'\nimport { setPageTitle, showNotification } from '../../common/headerSlice'\n\nfunction FeaturesContent(){\n\n    const dispatch = useDispatch()\n\n    return(\n        <>\n            <article className=\"prose\">\n              <h1 className=\"\">Features</h1>\n\n\n\n                {/* Authentication*/}\n              <h2 id=\"feature1\">Authentication</h2>\n                <p>\n                   JWT based Authentication logic is present in <span className=\"badge mt-0 mb-0 badge-ghost\">/app/auth.js</span>. In the file you can see we are adding bearer token in header for every request. Every routes under <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/</span> folder will need authentication. For public routes like login, register you will have to add routes in <span className=\"badge mt-0 mb-0 badge-ghost\">App.js</span> file and also include the path in PUBLIC_ROUTES variable under <span className=\"badge mt-0 mb-0 badge-ghost\">/app/auth.js</span> file so that auto redirect to login page is not triggered.\n                   \n                </p>\n\n\n\n\n                   {/* Left Sidebar*/}\n              <h2 id=\"feature2\">Left Sidebar</h2>\n                  <p>\n                      This is main internal navigation (for pages that will come after login only), all sidebar menu items with their icons are present in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/sidebar.js</span>  file, while  path and page components mapping are respectively present in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/index.js</span> file.\n                    </p>\n\n\n\n                {/* Add New Page*/}\n            <h2 id=\"feature3\">Add New Page</h2>\n                <p>All <span className='font-semibold'>public routes</span> are present in <span className=\"badge mt-0 mb-0 badge-ghost\">App.js</span> file. Steps to add new public page - \n                </p>\n\n                <ul className='mt-0'>\n                        <li>Create Page inside <span className=\"badge mt-0 mb-0 badge-ghost\">/pages</span> folder</li>\n                        <li>Go to <span className=\"badge mt-0 mb-0 badge-ghost\">App.js</span> and import the component and add its path</li>\n                        <li>Add your new route path in <span className=\"badge mt-0 mb-0 badge-ghost\">/app/auth.js</span> file under PUBLIC_ROUTES variable, this will allow the page to open without login.</li>\n                </ul>\n\n                <p className='mt-4'>All <span className='font-semibold'>protected routes</span> are present in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/sidebar.js</span> file</p>\n\n                <ul className='mt-0'>\n                        <li>Create your page inside <span className=\"badge mt-0 mb-0 badge-ghost\">/pages/protected</span> folder</li>\n                        <li>Add your new routes in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/sidebar.js</span>, this will show your new page in sidebar</li>\n                        <li>Import your new routes component and map its path in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/index.js</span></li>\n                 </ul>\n\n\n\n              {/* Right Sidebar*/}\n              <h2 id=\"feature4\">Right Sidebar</h2>\n                    <div>\n                        This is used for showing long list contents like notifications, settings etc.. We are using redux to show and hide and it is single component and can be called from any file with dispatch method.\n                        To add new content follow following steps:\n                        <ul>\n                          <li>Create new component file containing main body of your content</li>\n                          <li>Create new variable in <span className=\"badge mt-0 mb-0 badge-ghost\">/utils/globalConstantUtils.js</span> file under RIGHT_DRAWER_TYPES variable</li>\n                          <li>Now include the file mapped with the new variable in <span className=\"badge mt-0 mb-0 badge-ghost\">/containers/RightSidebar.js</span> file using switch. <br />\n                           For ex- If you new component name is <span className=\"badge mt-0 mb-0 badge-ghost\">TestRightSideBar.js</span> and  variable name is TEST_RIGHT_SIDEBAR, then add following code inside switch code block\n                          <br />\n                          <div className=\"mockup-code mt-4\">\n                                <pre className='my-0 py-0'><code>{`[RIGHT_DRAWER_TYPES.TEST_RIGHT_SIDEBAR] : \\n<TestRightSideBar {...extraObject} closeRightDrawer={close}/>`}</code></pre>\n                          </div>\n                          <span className='text-sm mt-1 italic'>Here extraObject have variables that is passed from parent component while calling openRightDrawer method</span>\n                          </li>\n                          <li>Now the last step, call dispatch method as follows\n                          <div className=\"mockup-code mt-1\">\n                                <pre className='my-0 py-0'><code>{'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n  dispatch(openRightDrawer({header : \"Test Right Drawer\", \\n  bodyType : RIGHT_DRAWER_TYPES.TEST_RIGHT_SIDEBAR}))'}</code></pre>\n                          </div> \n                          </li>\n                        </ul>\n                    </div>\n\n\n                    {/* Themes*/}\n              <h2 id=\"feature5\">Themes</h2>\n                <p>\n                By default we have added light and dark theme and Daisy UI comes with a number of themes, which you can use with no extra effort, you just have to include it in <span className=\"badge mt-0 mb-0 badge-ghost\">tailwind.config.js</span> file,  you can add themes like cupcake, corporate, reto etc... Also we can configure themes colors in config file, for more documentation on themes checkout <a href=\"https://daisyui.com/docs/themes/\" target=\"_blank\">Daisy UI documentation.</a>\n                </p>\n\n\n\n\n                    {/* Modal*/}\n              <h2 id=\"feature6\">Modal</h2>\n                  <div>\n                        With global modal functionality you dont have to create seperate modal for each page. We are using redux to show and hide and it is a single component and can be called from any file with dispatch method.\n                        Code for showing modal is present in modalSlice and layout container component. To show modal just call openModal() function of modalSlice using dispatch.\n                        <br />\n                        To add new modal in any page follow following steps:\n                        <ul>\n                          <li>Create new component file containing main body of your modal content</li>\n                          <li>Create new variable in <span className=\"badge mt-0 mb-0 badge-ghost\">/utils/globalConstantUtils.js</span> file under MODAL_BODY_TYPES variable</li>\n                          <li>Now include the file mapped with the new variable in <span className=\"badge mt-0 mb-0 badge-ghost\">/containers/ModalLayout.js</span> file using switch. <br />\n                           For ex- If you new component name is <span className=\"badge mt-0 mb-0 badge-ghost\">TestModal.js</span> and  variable name is TEST_MODAL, then add following code inside switch code block\n                          <br />\n                          <div className=\"mockup-code mt-4\">\n                                <pre className='my-0 py-0'><code>{`[RIGHT_DRAWER_TYPES.TEST_MODAL] : \\n<TestModal closeModal={close} extraObject={extraObject}/>`}</code></pre>\n                          </div>\n                          <span className='text-sm mt-1 italic'>Here extraObject have variables that is passed from parent component while calling openModal method</span>\n                          </li>\n                          <li>Now the last step, call dispatch method as follows\n                          <div className=\"mockup-code mt-1\">\n                                <pre className='my-0 py-0'><code>{'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n   dispatch(openModal({title : \"Test Modal Title\", \\n   bodyType : MODAL_BODY_TYPES.TEST_MODAL}))'}</code></pre>\n                          </div> \n                          </li>\n                        </ul>\n                    </div>\n\n\n\n\n                 \n\n\n                  {/* Notification*/}\n                  <h2 id=\"feature7\">Notification</h2>\n                  <p>Many times we have to show notification to user be it on successfull form submission or any api success. And requirement can come to show notification from any page, so global notification handling is needed.</p>\n\n                    <p className='mt-4'>Code for showing notification is present in headerSlice and layout container component. To show notification just call <span className='badge badge-ghost'>showNotification()</span> function of headerSlice using dispatch. To show success message notification pass status as 1 and for showing error message pass status as 0.</p> \n\n                    <div className=\"mockup-code mb-4\">\n                          <pre className='my-0 py-0'><code>{'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n  dispatch(showNotification({message : \"Message here\", status : 1}))'}</code></pre>\n                    </div> \n\n                    <p>Click on this button to check</p>\n\n                    <button className='btn btn-success' onClick={() => dispatch(showNotification({message : \"Your message has been sent!\", status : 1}))}>Success</button>\n\n                    <button className='btn btn-error ml-4' onClick={() => dispatch(showNotification({message : \"Something went wrong!\", status : 0}))}>Error</button>\n\n\n                    <div className='h-24'></div>\n\n\n            </article>\n        </>\n    )\n}\n\nexport default FeaturesContent","function HelperText({className, children}){\n    return(\n        <div className={`text-slate-400 ${className}`}>{children}</div>\n    )\n}\n\nexport default HelperText","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport InputText from '../../../components/Input/InputText'\nimport Title from '../../../components/Typography/Title'\nimport Subtitle from '../../../components/Typography/Subtitle'\nimport ErrorText from '../../../components/Typography/ErrorText'\nimport HelperText from '../../../components/Typography/HelperText'\n\nimport { setPageTitle, showNotification } from '../../common/headerSlice'\nimport TitleCard from '../../../components/Cards/TitleCard'\n\nfunction DocComponentsContent(){\n\n    const dispatch = useDispatch()\n\n    const updateFormValue = () => {\n        // Dummy function for input text component\n    }\n\n    return(\n        <>\n            <article className=\"prose\">\n              <h1 className=\"\" >Components</h1>\n\n                We have added some global components that are used commonly inside the project.\n\n                {/* Typography*/}\n              <h2 id=\"component1\">Typography</h2>\n                <div>\n                    These components are present under <span className=\"badge mt-0 mb-0 badge-ghost\">/components/Typography</span> folder. It accepts styleClass as props which can be used to pass additional className for style. It has following components which you can import and use it - \n                    <div className=\"mockup-code mt-4\">\n                    <pre className='my-0 py-0'><code>{'import  Title from \"../components/Typography/Title\"\\n  <Title>Your Title here</Title>'}</code></pre>\n                    </div>\n                    <ul>\n                      <li><span className='font-bold'>Title</span> - Use this component to show title \n                      <Title>Title Example</Title>\n                       </li>\n                      <li><span className='font-bold'>Subtitle</span> - Component that shows text smaller than title \n                      <Subtitle styleClass=\"mt-4 mb-6\">Subtitle Example</Subtitle>\n                      </li>\n                      <li><span className='font-bold'>ErrorText</span> - Used for showing error messages \n                      <ErrorText styleClass=\"mt-2\">Error Text Example</ErrorText>\n                      </li>\n                      <li><span className='font-bold'>HelperText</span> - Used for showing secondary message \n                      <HelperText styleClass=\"\">Helper Text Example</HelperText></li>\n                    </ul>\n                </div>\n\n\n                 {/* Form Input*/}\n              <h2 id=\"component2\">Form Input</h2>\n                <p>\n                      Many times we have to use form input like text, select one or toogle and in every file we have to handle its state management, here we have added global form component that can be used in any file and state variables can be managed by passing props to it. It is present in <span className=\"badge mt-0 mb-0 badge-ghost\">/components/Input</span> folder. \n                </p>\n                Ex- \n                <div className=\"mockup-code mt-4\">\n                    <pre className='my-0 py-0'><code>{'const INITIAL_LEAD_OBJ = {\\n   first_name : \"\", \\n   last_name : \"\", \\n   email : \"\" \\n  } \\n   const [leadObj, setLeadObj] = useState(INITIAL_LEAD_OBJ) \\n   const updateFormValue = ({updateType, value}) => {\\n    setErrorMessage(\"\") \\n    setLeadObj({...leadObj, [updateType] : value})\\n   }\\n\\n<InputText type=\"text\" defaultValue={leadObj.first_name}  \\n  updateType=\"first_name\" containerStyle=\"mt-4\"  \\n  labelTitle=\"First Name\" updateFormValue={updateFormValue}/>'}</code></pre>\n                </div>\n                <InputText type=\"text\" defaultValue={\"input value\"}  updateType=\"first_name\" containerStyle=\"mt-3\" labelTitle=\"Label Title\" updateFormValue={updateFormValue}/>\n                \n\n               <p> This example is from add new lead modal, here we are importing component for creating text input and passing some props to handle its content and state variable. Description of props are as follows - </p>\n                <ul>\n                  <li><span className='font-bold'>type</span> - Input type value like number, date, time etc.. </li>\n                  <li><span className='font-bold'>updateType</span> - This is used to update state variable in parent component</li>\n                  <li><span className='font-bold'>containerStyle</span> - Style class for container of input, which include label as well</li>\n                  <li><span className='font-bold'>labelTitle</span> - Title of the label</li>\n                  <li><span className='font-bold'>updateFormValue</span> - Function of parent component to update state variable</li>\n                </ul>\n            \n\n\n\n                 {/* Cards */}\n                 <h2 id=\"component3\">Cards</h2>\n                <p>\n                    <a href=\"https://daisyui.com/components/card/\" target=\"_blank\">Daisy UI</a> already have many cards layout, on top of that we have added one card component that accept title props and shows children inside its body. Also there is a divider between title and body of card. On more provision has been added to add buttons on top left side of card using TopSideButtons props (check leads page).\n\n                </p>\n                Ex - \n                <div className=\"mockup-code mt-4\">\n                    <pre className='my-0 py-0'><code>{'<TitleCard title={\"Card Title\"}> <h1>Card Body</h1></TitleCard>'}</code></pre>\n                </div>\n                <div className='p-8 bg-base-300 rounded-lg mt-4'>\n                    <TitleCard title={\"Card Title\"}> <h1>Card Body</h1></TitleCard>\n                </div>\n\n\n                 \n\n                    <div className='h-24'></div>\n\n\n            </article>\n        </>\n    )\n}\n\nexport default DocComponentsContent","import {Link} from 'react-router-dom'\nimport FeaturesNav from '../features/documentation/components/FeaturesNav'\nimport GettingStartedContent from '../features/documentation/components/GettingStartedContent'\nimport GettingStartedNav from '../features/documentation/components/GettingStartedNav'\nimport Title from '../components/Typography/Title'\nimport DocComponentsNav from '../features/documentation/components/DocComponentsNav'\nimport FeaturesContent from '../features/documentation/components/FeaturesContent'\nimport DocComponentsContent from '../features/documentation/components/DocComponentsContent'\n\nfunction Documentation(){\n    return(\n      <>\n             <div className=\"min-h-screen bg-base-200 flex items-center\">\n            <div className=\"card mx-auto w-full max-w-4xl  shadow-xl\">\n                <div className=\"py-12 p-10 h-screen flex overflow-hidden  bg-base-100 rounded-xl\" >\n                        <div className=\"flex-none p-4 overflow-y-scroll gap-6 \">\n                            <h1 className='text-3xl font-bold mb-2'>Dashwind</h1>\n                            <Link to=\"/login\"><button type=\"submit\" className={\"btn normal-case btn-xs btn-primary\"}>Live Preview</button></Link>\n                            \n                            <GettingStartedNav />\n                            <FeaturesNav />\n                            <DocComponentsNav />\n                        </div>\n\n                        <div className=\"grow pt-16  overflow-y-scroll\">\n                            <GettingStartedContent />\n                            <FeaturesContent />\n                            <DocComponentsContent />\n                        </div>\n                </div>\n                </div>\n                </div>\n           \n        </>\n    )\n}\n\nexport default Documentation"],"names":["_ref","title","children","topMargin","EyeIcon","TopSideButtons","isVisible","onEyeChange","_jsxs","className","Subtitle","styleClass","_jsx","Button","type","onClick","async","uniqueString","Math","random","toString","substr","console","log","axios","post","data","success","Alert","message","showIcon","error","EyeOutlined","EyeInvisibleOutlined","labelTitle","labelStyle","containerStyle","defaultValue","placeholder","updateFormValue","updateType","value","setValue","useState","concat","onChange","e","updateInputValue","val","target","activeIndex","SECTION_NAVS","name","isActive","navs","setNavs","map","n","k","scrollToSection","currentIndex","document","getElementById","scrollIntoView","behavior","useDispatch","_Fragment","id","href","alt","dispatch","showNotification","status","Title","ErrorText","HelperText","InputText","TitleCard","Link","to","GettingStartedNav","FeaturesNav","DocComponentsNav","GettingStartedContent","FeaturesContent","DocComponentsContent"],"sourceRoot":""}